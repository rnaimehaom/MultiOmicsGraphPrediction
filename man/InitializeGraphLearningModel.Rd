% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02_LearnGraphPredictionModel.R
\name{InitializeGraphLearningModel}
\alias{InitializeGraphLearningModel}
\title{Find edges that share nodes and add them to a data frame.}
\usage{
InitializeGraphLearningModel(
  modelInputs,
  iterations = 1000,
  convergenceCutoff = 1e-10,
  stype.class = "numeric",
  learningRate = 0.2,
  activationType = "none",
  optimizationType = "SGD",
  initialMetaFeatureWeights = 0
)
}
\arguments{
\item{modelInputs}{An object of the ModelInput class.}

\item{iterations}{Maximum number of iterations. Default is 1,000.}

\item{convergenceCutoff}{Cutoff for convergence. Default is 0.001.}

\item{stype.class}{One of either "character" or "numeric". Default is "numeric".}

\item{learningRate}{Learning rate to use during training. Default is 0.2}

\item{activationType}{Activation function. May be "softmax", "sigmoid", 
"tanh", or "none". Default is "none", meaning stype.class is numeric.}

\item{optimizationType}{Type of optimization. May be "SGD", "momentum",
"adagrad", or "adam". Default is "SGD".}

\item{initialMetaFeatureWeights}{Initial weights for model meta-features. Default
is 0, which results in each meta-feature being given equal weight.}

\item{metaFeatures}{Calculated metafeatures.}
}
\description{
Find edges that share nodes and add them to a data frame.
}
